<?xml version="1.0" encoding="UTF-8"?><!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. --><project basedir="." default="build" name="binary1">
    <property environment="env"/>
    <property name="ECLIPSE_HOME" value="../../../../../Program Files/IBM/DS4.1.0.1"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.7"/>
    <property name="source" value="1.7"/>

                <property name="src.dir" location="src"/>
                <property name="src.test.dir" location="${src.dir}/test"/>
             
                <property name="target.dir" location="bin"/>
                <property name="target.report.dir" location="${target.dir}/report"/>
              	
    <path id="binary1.classpath">
        <pathelement location="bin"/>
    </path>
    <target name="init">
        <mkdir dir="bin"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
              	
              	
    <target name="clean">
        <delete dir="bin"/>
    </target>
    <target depends="clean" name="cleanall"/>
    <target depends="build-subprojects,build-project,jtest" name="build"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" includeantruntime="false" source="${source}" target="${target}">
            <src path="src"/>
            <classpath refid="binary1.classpath"/>
      	   <classpath>
      	        <pathelement path="lib/junit.jar"/>
      	    </classpath>
         	
        </javac>
    </target>
            	
              	
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar"/>
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </unzip>
    	

    </target>
    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">

    	<property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
        <antcall target="build"/>
    </target>
  
              	<target name="jtest">
              	        <mkdir dir="${target.report.dir}"/>
              	 
              	        <junit printsummary="yes" haltonerror="yes" haltonfailure="yes">
              	            <formatter type="plain" usefile="false"/>
              	            <formatter type="xml"/>
              	            <batchtest todir="${target.report.dir}">
              	                <fileset dir="${src.test.dir}">
              	                    <include name="**/*Test.java"/>
              	                </fileset>
              	            </batchtest>
              	            <classpath>
              	                <pathelement location="${target.classes.java.dir}"/>
              	                <pathelement location="${target.classes.test.dir}"/>
              	                <pathelement path="lib/junit.jar"/>
              	            </classpath>
              	        </junit>
              	    </target>
              	 
              	    <target name="jreport" depends="jtest">
              	        <mkdir dir="${target.report.dir}/html"/>
              	        <junitreport todir="${target.report.dir}">
              	            <fileset dir="${target.report.dir}">
              	                <include name="TEST-*.xml"/>
              	            </fileset>
              	            <report todir="${target.report.dir}/html"/>
              	        </junitreport>
              	    </target>
              	 
</project>